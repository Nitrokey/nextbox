"use strict";

require("core-js/modules/es.array.iterator.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  TEXT: true,
  getReportInfo: true
};
exports.getReportInfo = exports.TEXT = void 0;

var _lodash = require("lodash");

var T = _interopRequireWildcard(require("./text"));

var _baseline = require("./baseline");

Object.keys(_baseline).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _baseline[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _baseline[key];
    }
  });
});

var _createArtifacts = require("./create-artifacts");

Object.keys(_createArtifacts).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _createArtifacts[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _createArtifacts[key];
    }
  });
});

var _constants = require("./constants");

Object.keys(_constants).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _constants[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _constants[key];
    }
  });
});

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const TEXT = T;
exports.TEXT = TEXT;

const getReportInfo = report => (0, _lodash.get)(report, 'insights.webpack.assetsSizeTotal.data');

exports.getReportInfo = getReportInfo;