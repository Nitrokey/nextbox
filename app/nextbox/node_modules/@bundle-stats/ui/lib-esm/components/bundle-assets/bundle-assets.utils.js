/**
 * Get a list of all chunkIds across assets and runs
 *
 * @param {Array<Object>} items
 * @return {Array<string|number>}
 */
export var getAllChunkIds = function getAllChunkIds(items) {
  return items.reduce(function (agg, item) {
    var itemChunkIds = item.runs.map(function (run) {
      return run == null ? void 0 : run.chunkId;
    }).filter(function (chunkId) {
      return typeof chunkId !== 'undefined';
    });
    return itemChunkIds.reduce(function (itemAgg, chunkId) {
      if (itemAgg.includes(chunkId)) {
        return itemAgg;
      }

      return [].concat(itemAgg, [chunkId]);
    }, agg);
  }, []);
};