import _set from "lodash/set";
import _merge from "lodash/merge";
import React from 'react';
import { storiesOf } from '@storybook/react';
import { PACKAGE_FILTERS, createJobs } from '@bundle-stats/utils';
import baselineStats from '../../../__mocks__/webpack-stats.baseline.json';
import currentStats from '../../../__mocks__/webpack-stats.current.json';
import { getWrapperDecorator } from '../../stories';
import { BundlePackages } from '.';
var JOBS = createJobs([{
  webpack: currentStats
}, {
  webpack: baselineStats
}]);
var currentJob = JOBS[0],
    baselineJob = JOBS[1];
var stories = storiesOf('Components/BundlePackages', module);
stories.addDecorator(getWrapperDecorator());
stories.add('default', function () {
  return /*#__PURE__*/React.createElement(BundlePackages, {
    jobs: [baselineJob]
  });
});
stories.add('multiple jobs', function () {
  return /*#__PURE__*/React.createElement(BundlePackages, {
    jobs: JOBS
  });
});
stories.add('custom filters', function () {
  var _ref;

  return /*#__PURE__*/React.createElement(BundlePackages, {
    jobs: JOBS,
    filters: (_ref = {}, _ref[PACKAGE_FILTERS.CHANGED] = false, _ref[PACKAGE_FILTERS.DUPLICATE] = true, _ref)
  });
});
stories.add('empty packages', function () {
  return /*#__PURE__*/React.createElement(BundlePackages, {
    jobs: [_set(_merge({}, currentJob), 'metrics.webpack.packages', {}), _set(_merge({}, baselineJob), 'metrics.webpack.packages', {})]
  });
});
stories.add('empty filtered packages', function () {
  return /*#__PURE__*/React.createElement(BundlePackages, {
    jobs: [_set(_merge({}, currentJob), 'metrics.webpack.packages', {
      'package-a': {
        value: 100
      }
    }), _set(_merge({}, baselineJob), 'metrics.webpack.packages', {
      'package-a': {
        value: 100
      }
    })]
  });
});
var JOBS_EMPTY_BASELINE = createJobs([{
  webpack: currentStats
}, {
  webpack: null
}]);
stories.add('empty baseline', function () {
  return /*#__PURE__*/React.createElement(BundlePackages, {
    jobs: JOBS_EMPTY_BASELINE
  });
});