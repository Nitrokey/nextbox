function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import { Link } from 'react-router-dom';
import { getComponentStateQueryString } from '@bundle-stats/utils';
import { SECTION_URLS } from '../constants';
export var ComponentLink = function ComponentLink(_ref) {
  var section = _ref.section,
      title = _ref.title,
      params = _ref.params,
      props = _objectWithoutPropertiesLoose(_ref, ["section", "title", "params"]);

  var search = getComponentStateQueryString(params);
  var location = {
    pathname: SECTION_URLS[section],
    search: search
  };
  return /*#__PURE__*/React.createElement(Link, _extends({
    to: location,
    title: title
  }, props));
};
ComponentLink.propTypes = {
  section: PropTypes.string.isRequired,
  title: PropTypes.string,
  params: PropTypes.object // eslint-disable-line react/forbid-prop-types

};
ComponentLink.defaultProps = {
  title: '',
  params: {}
};