import _get from "lodash/get";
import React from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';
import { formatDistanceToNow } from 'date-fns';
import { SOURCE_PATH_WEBPACK_STATS, formatDate, formatTime } from '@bundle-stats/utils';
import { FlexStack } from '../../layout/flex-stack';
import { Stack } from '../../layout/stack';
import { Icon } from '../../ui/icon';
import css from './job-header.module.css';
export var JobHeader = function JobHeader(props) {
  var className = props.className,
      tag = props.tag,
      job = props.job,
      children = props.children;

  var _get2 = _get(job, "meta." + SOURCE_PATH_WEBPACK_STATS, {}),
      builtAt = _get2.builtAt,
      hash = _get2.hash;

  var rootClassName = cx(css.root, className);
  return /*#__PURE__*/React.createElement(Stack, {
    className: rootClassName,
    space: "xxsmall"
  }, /*#__PURE__*/React.createElement("h1", {
    className: css.title
  }, /*#__PURE__*/React.createElement("span", null, "#" + job.internalBuildNumber), tag && /*#__PURE__*/React.createElement("span", {
    className: css.tag
  }, tag)), /*#__PURE__*/React.createElement(FlexStack, {
    className: css.meta,
    space: "xxsmall"
  }, builtAt && /*#__PURE__*/React.createElement("span", {
    className: css.metaItem,
    title: formatDate(builtAt) + " " + formatTime(builtAt)
  }, /*#__PURE__*/React.createElement(Icon, {
    glyph: "clock",
    className: css.metaIcon
  }), /*#__PURE__*/React.createElement("span", {
    className: css.metaLabel
  }, formatDistanceToNow(new Date(builtAt), {
    addSuffix: true
  }))), hash && /*#__PURE__*/React.createElement("span", {
    className: css.metaItem,
    title: "Webpack bundle hash"
  }, /*#__PURE__*/React.createElement(Icon, {
    glyph: "commit",
    className: css.metaIcon
  }), /*#__PURE__*/React.createElement("span", {
    className: css.metaLabel
  }, hash)), children));
};
JobHeader.propTypes = {
  className: PropTypes.string,
  tag: PropTypes.string,
  job: PropTypes.shape({
    internalBuildNumber: PropTypes.number,
    meta: PropTypes.shape({
      builtAt: PropTypes.string
    }),
    summary: PropTypes.object // eslint-disable-line react/forbid-prop-types

  }),
  children: PropTypes.element
};
JobHeader.defaultProps = {
  className: '',
  tag: '',
  job: null,
  children: null
};