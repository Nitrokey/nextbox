function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import { storiesOf } from '@storybook/react';
import { createJobs } from '@bundle-stats/utils';
import baselineData from '../../../__mocks__/webpack-stats.baseline.json';
import currentData from '../../../__mocks__/webpack-stats.current.json';
import { METRICS_WEBPACK_ASSETS } from '../../constants';
import { getWrapperDecorator } from '../../stories';
import { Summary } from '.';
var MULTIPLE_JOBS = createJobs([{
  webpack: currentData
}, {
  webpack: baselineData
}]);
var SINGLE_JOB = createJobs([{
  webpack: currentData
}]);
var stories = storiesOf('Components/Summary', module);
stories.addDecorator(getWrapperDecorator());
stories.add('default', function () {
  return /*#__PURE__*/React.createElement(Summary, {
    data: MULTIPLE_JOBS[0].summary
  });
});
stories.add('custom keys', function () {
  return /*#__PURE__*/React.createElement(Summary, {
    keys: METRICS_WEBPACK_ASSETS,
    data: MULTIPLE_JOBS[0].summary
  });
});
stories.add('loading', function () {
  return /*#__PURE__*/React.createElement(Summary, {
    loading: true
  });
});
stories.add('single run', function () {
  return /*#__PURE__*/React.createElement(Summary, {
    data: SINGLE_JOB[0].summary,
    showSummaryItemDelta: false
  });
});
stories.add('with link', function () {
  return /*#__PURE__*/React.createElement(Summary, {
    data: MULTIPLE_JOBS[0].summary,
    summaryItemLink: function summaryItemLink(_ref) {
      var keyProps = _ref.keyProps,
          props = _objectWithoutPropertiesLoose(_ref, ["keyProps"]);

      return /*#__PURE__*/React.createElement("button", _extends({
        type: "button"
      }, props, {
        onClick: function onClick() {
          return alert(JSON.stringify(keyProps));
        }
      }));
    }
  });
});