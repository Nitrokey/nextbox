function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { useMemo } from 'react';
import PropTypes from 'prop-types';
export var withFilteredItems = function withFilteredItems(getFilter) {
  return function (BaseComponent) {
    var WithFilteredItems = function WithFilteredItems(props) {
      var items = props.items,
          filters = props.filters,
          searchPattern = props.searchPattern;
      var filteredItems = useMemo(function () {
        return items.filter(function (item) {
          if (searchPattern && !searchPattern.test(item == null ? void 0 : item.key)) {
            return false;
          }

          return getFilter(filters)(item);
        });
      }, [items, searchPattern, filters]);
      var baseProps = {
        items: filteredItems
      };
      return /*#__PURE__*/React.createElement(BaseComponent, _extends({}, props, baseProps));
    };

    WithFilteredItems.propTypes = {
      filters: PropTypes.object.isRequired,
      // eslint-disable-line react/forbid-prop-types
      items: PropTypes.array.isRequired,
      // eslint-disable-line react/forbid-prop-types
      searchPattern: PropTypes.instanceOf(RegExp).isRequired
    };
    return WithFilteredItems;
  };
};