function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';
import { Container } from '../../ui/container';
import config from '../../config.json';
import css from './footer.module.css';
/* eslint-disable jsx-a11y/anchor-has-content */

var StandardLink = function StandardLink(_ref) {
  var to = _ref.to,
      source = _ref.source,
      props = _objectWithoutPropertiesLoose(_ref, ["to", "source"]);

  return /*#__PURE__*/React.createElement("a", _extends({
    href: "" + config.siteUrl + to + "?utm_source=" + source
  }, props));
};
/* eslint-enable jsx-a11y/anchor-has-content */


StandardLink.propTypes = {
  /** Link to value */
  to: PropTypes.string.isRequired,

  /** UTM source */
  source: PropTypes.string.isRequired
};
export var Footer = function Footer(_ref2) {
  var className = _ref2.className,
      children = _ref2.children,
      Link = _ref2.Link,
      source = _ref2.source;
  return /*#__PURE__*/React.createElement(Container, {
    className: cx(css.root, className),
    as: "footer"
  }, children && /*#__PURE__*/React.createElement("div", {
    className: css.content
  }, children), /*#__PURE__*/React.createElement("div", {
    className: css.info
  }, /*#__PURE__*/React.createElement("div", {
    className: css.navigation
  }, /*#__PURE__*/React.createElement("div", {
    className: css.navGroup
  }, /*#__PURE__*/React.createElement("h3", {
    className: css.navGroupTitle
  }, /*#__PURE__*/React.createElement(Link, {
    to: "/documentation",
    className: css.navGroupTitleLink,
    source: source
  }, "Documentation")), /*#__PURE__*/React.createElement("nav", {
    className: css.nav
  }, /*#__PURE__*/React.createElement(Link, {
    to: "/documentation/setup",
    className: css.navLink,
    source: source
  }, "Setup"), /*#__PURE__*/React.createElement(Link, {
    to: "/documentation/metrics-and-data",
    className: css.navLink,
    source: source
  }, "Metrics and data"), /*#__PURE__*/React.createElement(Link, {
    to: "/documentation/front-end-ops-resources",
    className: css.navLink,
    source: source
  }, "FrontEnd-Ops Resources"), /*#__PURE__*/React.createElement(Link, {
    to: "/releases",
    className: css.navLink,
    source: source
  }, "Release notes"), /*#__PURE__*/React.createElement(Link, {
    to: "/documentation/faq",
    className: css.navLink,
    source: source
  }, "FAQ"), /*#__PURE__*/React.createElement("a", {
    href: "https://github.com/relative-ci/roadmap/issues",
    className: css.navLink
  }, "Roadmap"))), /*#__PURE__*/React.createElement("div", {
    className: css.navGroup
  }, /*#__PURE__*/React.createElement("h3", {
    className: css.navGroupTitle
  }, "Tools"), /*#__PURE__*/React.createElement("nav", {
    className: css.nav
  }, /*#__PURE__*/React.createElement("a", {
    href: "https://github.com/relative-ci/bundle-stats",
    className: css.navLink,
    target: "_blank",
    rel: "noopener noreferrer",
    title: "In-depth bundle analyzer for webpack(bundle size, assets, modules, packages)"
  }, "Bundle Stats"), /*#__PURE__*/React.createElement("a", {
    href: "https://compare.relative-ci.com/?utm_source=" + source,
    className: css.navLink,
    title: "Side by side comparison for webpack/lighthouse/browsertime stats"
  }, "Compare"), /*#__PURE__*/React.createElement("a", {
    href: "https://video-compare.relative-ci.com/?utm_source=" + source,
    className: css.navLink,
    title: "Side by side video playing for webpagetest / browsertime recordings."
  }, "Video Compare"))), /*#__PURE__*/React.createElement("div", {
    className: css.navGroup
  }, /*#__PURE__*/React.createElement("h3", {
    className: css.navGroupTitle
  }, "Social"), /*#__PURE__*/React.createElement("nav", {
    className: css.nav
  }, /*#__PURE__*/React.createElement("a", {
    href: "https://github.com/relative-ci",
    className: css.navLink
  }, "Github"), /*#__PURE__*/React.createElement("a", {
    href: "https://twitter.com/Relative_CI",
    className: css.navLink
  }, "Twitter")))), /*#__PURE__*/React.createElement("div", {
    className: css.branding
  }, /*#__PURE__*/React.createElement(Link, {
    className: css.copyright,
    to: "/",
    title: "Go to homepage",
    source: source
  }, "\xA9", " " + new Date().getFullYear() + " " + config.appName))));
};
Footer.defaultProps = {
  className: '',
  children: null,
  source: 'web',
  Link: StandardLink
};
Footer.propTypes = {
  /** Adopted child class name */
  className: PropTypes.string,

  /** Content */
  children: PropTypes.node,

  /** UTM source */
  source: PropTypes.string,

  /** Link component */
  Link: PropTypes.elementType
};