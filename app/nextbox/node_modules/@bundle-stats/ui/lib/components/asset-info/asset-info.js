"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AssetInfo = void 0;

var _map2 = _interopRequireDefault(require("lodash/map"));

var _find2 = _interopRequireDefault(require("lodash/find"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _utils = require("@bundle-stats/utils");

var _stack = require("../../layout/stack");

var _fileName = require("../../ui/file-name");

var _componentLink = require("../component-link");

var _assetInfoModule = _interopRequireDefault(require("./asset-info.module.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var ChunkModulesLink = function ChunkModulesLink(_ref) {
  var Component = _ref.as,
      chunks = _ref.chunks,
      chunkId = _ref.chunkId,
      name = _ref.name;
  var chunk = (0, _find2["default"])(chunks, {
    id: chunkId
  });

  if (!chunk) {
    return null;
  }

  var chunkIds = (0, _map2["default"])(chunks, 'id');
  var fileType = (0, _utils.getModuleFileType)(name);
  return /*#__PURE__*/_react["default"].createElement(Component, _extends({
    className: _assetInfoModule["default"].viewModules
  }, (0, _utils.getBundleModulesByChunk)(chunkIds, chunkId, fileType)), "View chunk modules");
};

ChunkModulesLink.propTypes = {
  as: _propTypes["default"].elementType.isRequired,
  chunks: _propTypes["default"].array,
  // eslint-disable-line react/forbid-prop-types
  chunkId: _propTypes["default"].string,
  name: _propTypes["default"].string
};
ChunkModulesLink.defaultProps = {
  chunks: [],
  chunkId: '',
  name: ''
};

var AssetInfo = function AssetInfo(props) {
  var className = props.className,
      chunks = props.chunks,
      item = props.item,
      labels = props.labels,
      CustomComponentLink = props.CustomComponentLink;
  return /*#__PURE__*/_react["default"].createElement(_stack.Stack, {
    space: "xsmall",
    className: (0, _classnames["default"])(_assetInfoModule["default"].root, className)
  }, item.runs.map(function (run, index) {
    var Title = index !== 0 ? 'h4' : 'h3';
    var key = "asset-info-".concat((run === null || run === void 0 ? void 0 : run.name) || index, "-").concat(index);
    return /*#__PURE__*/_react["default"].createElement(_stack.Stack, {
      space: "xxxsmall",
      key: key
    }, /*#__PURE__*/_react["default"].createElement(Title, null, labels[index]), /*#__PURE__*/_react["default"].createElement(_fileName.FileName, {
      className: _assetInfoModule["default"].fileName,
      as: "code",
      name: (run === null || run === void 0 ? void 0 : run.name) || '-'
    }), index === 0 && /*#__PURE__*/_react["default"].createElement(ChunkModulesLink, {
      as: CustomComponentLink,
      chunks: chunks,
      chunkId: run === null || run === void 0 ? void 0 : run.chunkId,
      name: run === null || run === void 0 ? void 0 : run.name
    }));
  }));
};

exports.AssetInfo = AssetInfo;
AssetInfo.propTypes = {
  className: _propTypes["default"].string,
  item: _propTypes["default"].shape({
    runs: _propTypes["default"].arrayOf(_propTypes["default"].shape({
      name: _propTypes["default"].string,
      chunkId: _propTypes["default"].string
    }))
  }).isRequired,
  labels: _propTypes["default"].arrayOf(_propTypes["default"].string).isRequired,
  chunks: _propTypes["default"].array,
  // eslint-disable-line react/forbid-prop-types
  CustomComponentLink: _propTypes["default"].elementType
};
AssetInfo.defaultProps = {
  className: '',
  chunks: [],
  CustomComponentLink: _componentLink.ComponentLink
};