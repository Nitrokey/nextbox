"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BundleAssetsTotalsChartBars = void 0;

var _sum2 = _interopRequireDefault(require("lodash/sum"));

var _max2 = _interopRequireDefault(require("lodash/max"));

var _map2 = _interopRequireDefault(require("lodash/map"));

var _get2 = _interopRequireDefault(require("lodash/get"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var webpack = _interopRequireWildcard(require("@bundle-stats/utils/lib-esm/webpack"));

var _utils = require("@bundle-stats/utils");

var _constants = require("../../constants");

var _horizontalBarChart = require("../../ui/horizontal-bar-chart");

var _componentLink = require("../component-link");

var _utils2 = require("../../utils");

var _stack = require("../../layout/stack");

var _summaryItem = require("../summary-item");

var _bundleAssetsTotalsChartBarsModule = _interopRequireDefault(require("./bundle-assets-totals-chart-bars.module.css"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var BundleAssetsTotalsChartBars = function BundleAssetsTotalsChartBars(_ref) {
  var className = _ref.className,
      jobs = _ref.jobs,
      CustomComponentLink = _ref.customComponentLink;
  var rootClassName = (0, _classnames["default"])(_bundleAssetsTotalsChartBarsModule["default"].root, className);
  var items = webpack.compareBySection.sizes(jobs);
  var dataGraphs = [];
  items.forEach(function (_ref2) {
    var runs = _ref2.runs;
    runs.forEach(function (run, runIndex) {
      dataGraphs[runIndex] = [].concat(_toConsumableArray(dataGraphs[runIndex] || []), [(0, _get2["default"])(run, 'value', 0)]);
    });
  });
  var maxValues = (0, _max2["default"])((0, _map2["default"])(dataGraphs, function (values) {
    return (0, _sum2["default"])(values);
  }));
  var maxValue = (0, _max2["default"])(maxValues);
  var labels = items.map(function (_ref3) {
    var key = _ref3.key,
        label = _ref3.label;
    var fileType = _constants.ASSETS_SIZES_FILE_TYPE_MAP[key];
    var componentData = (0, _utils.getBundleAssetsFileTypeComponentLink)(fileType, label);
    return /*#__PURE__*/_react["default"].createElement(CustomComponentLink, _extends({
      className: _bundleAssetsTotalsChartBarsModule["default"].itemLink
    }, componentData), label);
  });
  var colors = (0, _utils2.getColors)((0, _max2["default"])((0, _map2["default"])(dataGraphs, function (values) {
    return values.length;
  })));

  var getTooltip = function getTooltip(itemIndex, runIndex) {
    return function () {
      return /*#__PURE__*/_react["default"].createElement(_summaryItem.SummaryItem, {
        className: _bundleAssetsTotalsChartBarsModule["default"].itemTooltip,
        id: (0, _get2["default"])(items, [itemIndex, 'key']),
        data: {
          current: (0, _get2["default"])(items, [itemIndex, 'runs', runIndex, 'value'], 0),
          baseline: (0, _get2["default"])(items, [itemIndex, 'runs', runIndex + 1, 'value'], 0)
        },
        showDelta: runIndex < jobs.length - 1,
        showBaselineValue: runIndex < jobs.length - 1,
        size: "large"
      });
    };
  };

  return /*#__PURE__*/_react["default"].createElement(_stack.Stack, {
    className: rootClassName,
    space: "medium"
  }, dataGraphs.map(function (data, runIndex) {
    var internalBuildNumber = jobs[runIndex].internalBuildNumber;
    var values = data.map(function (value, valueIndex) {
      return {
        value: value,
        color: colors[valueIndex],
        label: labels[valueIndex],
        getItemTooltip: getTooltip(valueIndex, runIndex)
      };
    });
    return /*#__PURE__*/_react["default"].createElement("div", {
      key: internalBuildNumber || runIndex,
      className: _bundleAssetsTotalsChartBarsModule["default"].item
    }, /*#__PURE__*/_react["default"].createElement("h3", {
      className: _bundleAssetsTotalsChartBarsModule["default"].itemTitle
    }, "Job #".concat(internalBuildNumber)), /*#__PURE__*/_react["default"].createElement(_horizontalBarChart.HorizontalBarChart, {
      className: _bundleAssetsTotalsChartBarsModule["default"].itemChart,
      data: {
        labels: labels,
        values: values
      },
      maxValue: maxValue
    }));
  }));
};

exports.BundleAssetsTotalsChartBars = BundleAssetsTotalsChartBars;
BundleAssetsTotalsChartBars.defaultProps = {
  className: '',
  customComponentLink: _componentLink.ComponentLink
};
BundleAssetsTotalsChartBars.propTypes = {
  className: _propTypes["default"].string,
  jobs: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    internalBuildNumber: _propTypes["default"].number
  })).isRequired,
  customComponentLink: _propTypes["default"].elementType
};