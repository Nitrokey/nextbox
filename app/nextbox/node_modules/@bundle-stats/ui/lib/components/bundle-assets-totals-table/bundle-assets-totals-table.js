"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BundleAssetsTotalsTable = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _utils = require("@bundle-stats/utils");

var webpack = _interopRequireWildcard(require("@bundle-stats/utils/lib-esm/webpack"));

var _constants = require("../../constants");

var _metricsTable = require("../metrics-table");

var _componentLink = require("../component-link");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var BundleAssetsTotalsTable = function BundleAssetsTotalsTable(_ref) {
  var className = _ref.className,
      jobs = _ref.jobs,
      CustomComponentLink = _ref.customComponentLink;
  var items = webpack.compareBySection.sizes(jobs);

  var renderRowHeader = function renderRowHeader(item) {
    var fileType = _constants.ASSETS_SIZES_FILE_TYPE_MAP[item.key];

    var _getBundleAssetsFileT = (0, _utils.getBundleAssetsFileTypeComponentLink)(fileType, item.label),
        section = _getBundleAssetsFileT.section,
        title = _getBundleAssetsFileT.title,
        params = _getBundleAssetsFileT.params;

    return /*#__PURE__*/_react["default"].createElement(CustomComponentLink, {
      section: section,
      title: title,
      params: params
    }, item.label);
  };

  return /*#__PURE__*/_react["default"].createElement(_metricsTable.MetricsTable, {
    className: className,
    runs: jobs,
    items: items,
    renderRowHeader: renderRowHeader,
    showHeaderSum: true
  });
};

exports.BundleAssetsTotalsTable = BundleAssetsTotalsTable;
BundleAssetsTotalsTable.defaultProps = {
  className: '',
  jobs: [],
  customComponentLink: _componentLink.ComponentLink
};
BundleAssetsTotalsTable.propTypes = {
  /** Addopted child class name */
  className: _propTypes["default"].string,

  /** Jobs data */
  jobs: _propTypes["default"].array,
  // eslint-disable-line react/forbid-prop-types
  customComponentLink: _propTypes["default"].elementType
};