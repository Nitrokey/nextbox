"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BundleAssets = void 0;

var _map2 = _interopRequireDefault(require("lodash/map"));

var _get2 = _interopRequireDefault(require("lodash/get"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _utils = require("@bundle-stats/utils");

var _config = _interopRequireDefault(require("../../config.json"));

var _i18n = _interopRequireDefault(require("../../i18n"));

var _flexStack = require("../../layout/flex-stack");

var _icon = require("../../ui/icon");

var _fileName = require("../../ui/file-name");

var _popover = require("../../ui/popover");

var _tooltip = require("../../ui/tooltip");

var _filters = require("../../ui/filters");

var _sortDropdown = require("../../ui/sort-dropdown");

var _emptySet = require("../../ui/empty-set");

var _toolbar = require("../../ui/toolbar");

var _assetInfo = require("../asset-info");

var _componentLink = require("../component-link");

var _metricsTable = require("../metrics-table");

var _metricsTableSearch = require("../metrics-table-search");

var _metricsTableOptions = require("../metrics-table-options");

var _metricsTableTitle = require("../metrics-table-title");

var _bundleAssetsModule = _interopRequireDefault(require("./bundle-assets.module.css"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var RUN_TITLE_CURRENT = 'Current';
var RUN_TITLE_BASELINE = 'Baseline';
var RUNS_LABELS = [RUN_TITLE_CURRENT, RUN_TITLE_BASELINE];

var getFileTypeFilters = function getFileTypeFilters(filters) {
  return Object.entries(_utils.FILE_TYPE_LABELS).map(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        id = _ref2[0],
        label = _ref2[1];

    return _defineProperty({}, id, {
      label: label,
      defaultValue: (0, _get2["default"])(filters, "".concat(_utils.ASSET_FILE_TYPE, ".").concat(id), true)
    });
  }).reduce(function (agg, current) {
    return _objectSpread(_objectSpread({}, agg), current);
  }, {});
};

var TooltipNotPredictive = function TooltipNotPredictive(_ref4) {
  var runs = _ref4.runs;
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: _bundleAssetsModule["default"].tooltipNotPredictive
  }, /*#__PURE__*/_react["default"].createElement("p", {
    className: _bundleAssetsModule["default"].tooltipNotPredictiveText
  }, "File name is the same, but the size has changed:"), /*#__PURE__*/_react["default"].createElement("table", {
    className: _bundleAssetsModule["default"].tooltipTable
  }, /*#__PURE__*/_react["default"].createElement("tr", null, runs.map(function (_ref5, index) {
    var name = _ref5.name,
        value = _ref5.value;
    var key = index;
    return /*#__PURE__*/_react["default"].createElement("tr", {
      key: key
    }, /*#__PURE__*/_react["default"].createElement("th", null, RUNS_LABELS[index]), /*#__PURE__*/_react["default"].createElement("td", null, name), /*#__PURE__*/_react["default"].createElement("td", null, value));
  }))));
};

TooltipNotPredictive.defaultProps = {
  runs: []
};
TooltipNotPredictive.propTypes = {
  runs: _propTypes["default"].array // eslint-disable-line react/forbid-prop-types

};

var getRenderRowHeader = function getRenderRowHeader(_ref6) {
  var labels = _ref6.labels,
      CustomComponentLink = _ref6.CustomComponentLink,
      chunks = _ref6.chunks;
  return function (item) {
    return /*#__PURE__*/_react["default"].createElement(_popover.Popover, {
      label: /*#__PURE__*/_react["default"].createElement(_fileName.FileName, {
        name: item.label
      }),
      icon: /*#__PURE__*/_react["default"].createElement(_flexStack.FlexStack, {
        space: "xxxsmall",
        className: _bundleAssetsModule["default"].assetInfoFlags
      }, item.isNotPredictive && /*#__PURE__*/_react["default"].createElement(_tooltip.Tooltip, {
        className: _bundleAssetsModule["default"].notPredictive,
        title: /*#__PURE__*/_react["default"].createElement(TooltipNotPredictive, {
          runs: item.runs
        })
      }, /*#__PURE__*/_react["default"].createElement(_icon.Icon, {
        className: _bundleAssetsModule["default"].notPredictiveIcon,
        glyph: "warning"
      })), item.isChunk && /*#__PURE__*/_react["default"].createElement("span", {
        title: "Chunk",
        className: _bundleAssetsModule["default"].flagChunk
      }, "c"), item.isEntry && /*#__PURE__*/_react["default"].createElement("span", {
        title: "Entrypoint",
        className: _bundleAssetsModule["default"].flagEntry
      }, "e"), item.isInitial && /*#__PURE__*/_react["default"].createElement("span", {
        title: "Initial",
        className: _bundleAssetsModule["default"].flagInitial
      }, "i"))
    }, /*#__PURE__*/_react["default"].createElement(_assetInfo.AssetInfo, {
      className: _bundleAssetsModule["default"].assetInfo,
      item: item,
      labels: labels,
      chunks: chunks,
      CustomComponentLink: CustomComponentLink
    }));
  };
};

var BundleAssets = function BundleAssets(props) {
  var _jobs$, _jobs$$meta, _jobs$$meta$webpack, _ASSET_ENTRY_TYPE, _ref8;

  var className = props.className,
      jobs = props.jobs,
      items = props.items,
      updateFilters = props.updateFilters,
      resetFilters = props.resetFilters,
      resetAllFilters = props.resetAllFilters,
      totalRowCount = props.totalRowCount,
      filters = props.filters,
      hasActiveFilters = props.hasActiveFilters,
      sortItems = props.sortItems,
      sort = props.sort,
      updateSort = props.updateSort,
      search = props.search,
      updateSearch = props.updateSearch,
      CustomComponentLink = props.customComponentLink;

  var emptyMessage = /*#__PURE__*/_react["default"].createElement(_emptySet.EmptySet, {
    resources: "assets",
    filtered: totalRowCount !== 0,
    handleResetFilters: resetFilters,
    handleViewAll: resetAllFilters
  });

  var chunks = ((_jobs$ = jobs[0]) === null || _jobs$ === void 0 ? void 0 : (_jobs$$meta = _jobs$.meta) === null || _jobs$$meta === void 0 ? void 0 : (_jobs$$meta$webpack = _jobs$$meta.webpack) === null || _jobs$$meta$webpack === void 0 ? void 0 : _jobs$$meta$webpack.chunks) || [];
  var renderRowHeader = (0, _react.useMemo)(function () {
    return getRenderRowHeader({
      labels: (0, _map2["default"])(jobs, 'label'),
      CustomComponentLink: CustomComponentLink,
      chunks: chunks
    });
  }, [jobs, chunks]);
  return /*#__PURE__*/_react["default"].createElement("section", {
    className: (0, _classnames["default"])(_bundleAssetsModule["default"].root, className)
  }, /*#__PURE__*/_react["default"].createElement(_toolbar.Toolbar, {
    className: _bundleAssetsModule["default"].toolbar,
    renderActions: function renderActions(_ref7) {
      var actionClassName = _ref7.actionClassName;
      return /*#__PURE__*/_react["default"].createElement(_flexStack.FlexStack, {
        space: "xsmall",
        className: (0, _classnames["default"])(_bundleAssetsModule["default"].dropdown, actionClassName)
      }, /*#__PURE__*/_react["default"].createElement(_sortDropdown.SortDropdown, _extends({
        items: sortItems
      }, sort, {
        onChange: updateSort
      })), /*#__PURE__*/_react["default"].createElement(_metricsTableOptions.MetricsTableOptions, {
        handleViewAll: resetAllFilters,
        handleResetFilters: resetFilters
      }));
    }
  }, /*#__PURE__*/_react["default"].createElement(_flexStack.FlexStack, null, /*#__PURE__*/_react["default"].createElement(_metricsTableSearch.MetricsTableSearch, {
    className: _bundleAssetsModule["default"].toolbarSearch,
    placeholder: "Search by name",
    search: search,
    updateSearch: updateSearch
  }), /*#__PURE__*/_react["default"].createElement(_filters.Filters, {
    className: _bundleAssetsModule["default"].toolbarFilters,
    filters: (_ref8 = {}, _defineProperty(_ref8, _utils.ASSET_FILTERS.CHANGED, {
      label: 'Changed',
      defaultValue: filters[_utils.ASSET_FILTERS.CHANGED],
      disabled: jobs.length <= 1
    }), _defineProperty(_ref8, _utils.ASSET_ENTRY_TYPE, (_ASSET_ENTRY_TYPE = {
      label: 'Entry type'
    }, _defineProperty(_ASSET_ENTRY_TYPE, _utils.ASSET_FILTERS.ENTRY, {
      label: 'Entry',
      defaultValue: (0, _get2["default"])(filters, "".concat(_utils.ASSET_ENTRY_TYPE, ".").concat(_utils.ASSET_FILTERS.ENTRY), true)
    }), _defineProperty(_ASSET_ENTRY_TYPE, _utils.ASSET_FILTERS.INITIAL, {
      label: 'Initial',
      defaultValue: (0, _get2["default"])(filters, "".concat(_utils.ASSET_ENTRY_TYPE, ".").concat(_utils.ASSET_FILTERS.INITIAL), true)
    }), _defineProperty(_ASSET_ENTRY_TYPE, _utils.ASSET_FILTERS.CHUNK, {
      label: 'Chunk',
      defaultValue: (0, _get2["default"])(filters, "".concat(_utils.ASSET_ENTRY_TYPE, ".").concat(_utils.ASSET_FILTERS.CHUNK), true)
    }), _defineProperty(_ASSET_ENTRY_TYPE, _utils.ASSET_FILTERS.ASSET, {
      label: 'Asset',
      defaultValue: (0, _get2["default"])(filters, "".concat(_utils.ASSET_ENTRY_TYPE, ".").concat(_utils.ASSET_FILTERS.ASSET), true)
    }), _ASSET_ENTRY_TYPE)), _defineProperty(_ref8, _utils.ASSET_FILE_TYPE, _objectSpread({
      label: 'File type'
    }, getFileTypeFilters(filters))), _ref8),
    hasActiveFilters: hasActiveFilters,
    onChange: updateFilters
  }))), /*#__PURE__*/_react["default"].createElement("main", null, /*#__PURE__*/_react["default"].createElement(_metricsTable.MetricsTable, {
    runs: jobs,
    items: items,
    renderRowHeader: renderRowHeader,
    emptyMessage: emptyMessage,
    showHeaderSum: true,
    title: /*#__PURE__*/_react["default"].createElement(_metricsTableTitle.MetricsTableTitle, {
      title: _i18n["default"].ASSETS,
      info: "(".concat(items.length, "/").concat(totalRowCount, ")"),
      popoverInfo: _i18n["default"].ASSETS_INFO,
      popoverHref: _config["default"].documentation.assets
    })
  })));
};

exports.BundleAssets = BundleAssets;
BundleAssets.defaultProps = {
  className: '',
  totalRowCount: 0,
  hasActiveFilters: false,
  customComponentLink: _componentLink.ComponentLink
};
BundleAssets.propTypes = {
  className: _propTypes["default"].string,
  jobs: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    internalBuildNumber: _propTypes["default"].number,
    label: _propTypes["default"].string
  })).isRequired,
  items: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    key: _propTypes["default"].string,
    label: _propTypes["default"].string,
    runs: _propTypes["default"].arrayOf(_propTypes["default"].shape({
      displayValue: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
      displayDelta: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string])
    }))
  })).isRequired,
  updateFilters: _propTypes["default"].func.isRequired,
  resetFilters: _propTypes["default"].func.isRequired,
  resetAllFilters: _propTypes["default"].func.isRequired,
  totalRowCount: _propTypes["default"].number,
  filters: _propTypes["default"].shape({
    changed: _propTypes["default"].bool
  }).isRequired,
  hasActiveFilters: _propTypes["default"].bool,
  sortItems: _propTypes["default"].shape(_defineProperty({}, _propTypes["default"].string, _propTypes["default"].shape({
    label: _propTypes["default"].string,
    defaultDirection: _propTypes["default"].bool
  }))).isRequired,
  search: _propTypes["default"].string.isRequired,
  updateSearch: _propTypes["default"].func.isRequired,
  sort: _propTypes["default"].shape({
    sortBy: _propTypes["default"].string,
    direction: _propTypes["default"].string
  }).isRequired,
  updateSort: _propTypes["default"].func.isRequired,
  customComponentLink: _propTypes["default"].elementType
};