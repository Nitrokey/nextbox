"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BundleModules = void 0;

var _map2 = _interopRequireDefault(require("lodash/map"));

var _isEmpty2 = _interopRequireDefault(require("lodash/isEmpty"));

var _get2 = _interopRequireDefault(require("lodash/get"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _utils = require("@bundle-stats/utils");

var _config = _interopRequireDefault(require("../../config.json"));

var _i18n = _interopRequireDefault(require("../../i18n"));

var _componentLink = require("../component-link");

var _flexStack = require("../../layout/flex-stack");

var _emptySet = require("../../ui/empty-set");

var _fileName = require("../../ui/file-name");

var _filters = require("../../ui/filters");

var _popover = require("../../ui/popover");

var _sortDropdown = require("../../ui/sort-dropdown");

var _toolbar = require("../../ui/toolbar");

var _metricsTable = require("../metrics-table");

var _metricsTableSearch = require("../metrics-table-search");

var _metricsTableOptions = require("../metrics-table-options");

var _metricsTableTitle = require("../metrics-table-title");

var _moduleInfo = require("../module-info");

var _bundleModulesModule = _interopRequireDefault(require("./bundle-modules.module.css"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var RowHeader = function RowHeader(_ref) {
  var row = _ref.row,
      chunks = _ref.chunks,
      labels = _ref.labels,
      CustomComponentLink = _ref.CustomComponentLink;
  var chunkIds = (0, _map2["default"])(chunks, 'id');

  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      showPopopver = _useState2[0],
      setPopover = _useState2[1];

  var handleOnMouseEnter = (0, _react.useCallback)(function () {
    return setPopover(true);
  }, [showPopopver]);

  var content = /*#__PURE__*/_react["default"].createElement(_fileName.FileName, {
    name: row.label
  });

  return /*#__PURE__*/_react["default"].createElement("div", {
    onMouseEnter: handleOnMouseEnter
  }, !showPopopver ? content : /*#__PURE__*/_react["default"].createElement(_popover.Popover, {
    ariaLabel: "View module info",
    label: content
  }, function (_ref2) {
    var popoverToggle = _ref2.popoverToggle;
    return /*#__PURE__*/_react["default"].createElement(_moduleInfo.ModuleInfo, {
      className: _bundleModulesModule["default"].namePopover,
      item: row,
      chunks: chunks,
      chunkIds: chunkIds,
      labels: labels,
      customComponentLink: CustomComponentLink,
      onClick: popoverToggle
    });
  }));
};

RowHeader.propTypes = {
  row: _propTypes["default"].shape({
    label: _propTypes["default"].string
  }).isRequired,
  chunks: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    id: _propTypes["default"].string,
    name: _propTypes["default"].string
  })),
  labels: _propTypes["default"].arrayOf(_propTypes["default"].string).isRequired,
  CustomComponentLink: _propTypes["default"].elementType.isRequired
};
RowHeader.defaultProps = {
  chunks: []
};

var getRenderRowHeader = function getRenderRowHeader(_ref3) {
  var labels = _ref3.labels,
      chunks = _ref3.chunks,
      CustomComponentLink = _ref3.CustomComponentLink;
  return function (row) {
    return /*#__PURE__*/_react["default"].createElement(RowHeader, {
      row: row,
      chunks: chunks,
      labels: labels,
      CustomComponentLink: CustomComponentLink
    });
  };
};

var BundleModules = function BundleModules(_ref4) {
  var className = _ref4.className,
      jobs = _ref4.jobs,
      items = _ref4.items,
      chunks = _ref4.chunks,
      totalRowCount = _ref4.totalRowCount,
      updateFilters = _ref4.updateFilters,
      resetFilters = _ref4.resetFilters,
      resetAllFilters = _ref4.resetAllFilters,
      filters = _ref4.filters,
      sortItems = _ref4.sortItems,
      sort = _ref4.sort,
      updateSort = _ref4.updateSort,
      search = _ref4.search,
      updateSearch = _ref4.updateSearch,
      hasActiveFilters = _ref4.hasActiveFilters,
      CustomComponentLink = _ref4.customComponentLink;
  var rootClassName = (0, _classnames["default"])(_bundleModulesModule["default"].root, className);
  var labels = (0, _react.useMemo)(function () {
    return (0, _map2["default"])(jobs, 'label');
  }, [jobs]);
  var renderRowHeader = (0, _react.useMemo)(function () {
    return getRenderRowHeader({
      labels: labels,
      chunks: chunks,
      CustomComponentLink: CustomComponentLink
    });
  }, [labels, chunks]);

  var emptyMessage = /*#__PURE__*/_react["default"].createElement(_emptySet.EmptySet, {
    resources: "modules",
    filtered: totalRowCount !== 0,
    handleResetFilters: resetFilters,
    handleViewAll: resetAllFilters
  });

  var dropdownFilters = _objectSpread(_objectSpread(_defineProperty({}, _utils.MODULE_FILTERS.CHANGED, {
    label: 'Changed',
    defaultValue: filters.changed,
    disabled: jobs.length <= 1
  }), !(0, _isEmpty2["default"])(chunks) && _defineProperty({}, _utils.MODULE_CHUNK, _objectSpread({
    label: 'Chunk'
  }, chunks.reduce(function (chunkFilters, _ref5) {
    var id = _ref5.id,
        name = _ref5.name;
    return _objectSpread(_objectSpread({}, chunkFilters), {}, _defineProperty({}, id, {
      label: name,
      defaultValue: (0, _get2["default"])(filters, "".concat(_utils.MODULE_CHUNK, ".").concat(id), true)
    }));
  }, {})))), {}, _defineProperty({}, _utils.MODULE_FILE_TYPE, _objectSpread({
    label: 'File type'
  }, _utils.MODULE_SOURCE_FILE_TYPES.reduce(function (agg, fileType) {
    return _objectSpread(_objectSpread({}, agg), {}, _defineProperty({}, fileType, {
      label: _utils.FILE_TYPE_LABELS[fileType],
      defaultValue: (0, _get2["default"])(filters, "".concat(_utils.MODULE_FILE_TYPE, ".").concat(fileType), true)
    }));
  }, {}))));

  return /*#__PURE__*/_react["default"].createElement("div", {
    className: rootClassName
  }, /*#__PURE__*/_react["default"].createElement(_toolbar.Toolbar, {
    className: _bundleModulesModule["default"].toolbar,
    renderActions: function renderActions(_ref7) {
      var actionClassName = _ref7.actionClassName;
      return /*#__PURE__*/_react["default"].createElement(_flexStack.FlexStack, {
        space: "xxsmall",
        className: (0, _classnames["default"])(_bundleModulesModule["default"].dropdown, actionClassName)
      }, /*#__PURE__*/_react["default"].createElement(_sortDropdown.SortDropdown, _extends({
        className: _bundleModulesModule["default"].tableDropdown,
        items: sortItems,
        onChange: updateSort
      }, sort)), /*#__PURE__*/_react["default"].createElement(_metricsTableOptions.MetricsTableOptions, {
        handleViewAll: resetAllFilters,
        handleResetFilters: resetFilters
      }));
    }
  }, /*#__PURE__*/_react["default"].createElement(_flexStack.FlexStack, null, /*#__PURE__*/_react["default"].createElement(_metricsTableSearch.MetricsTableSearch, {
    className: _bundleModulesModule["default"].toolbarSearch,
    search: search,
    updateSearch: updateSearch,
    placeholder: "Search by name"
  }), /*#__PURE__*/_react["default"].createElement(_filters.Filters, {
    className: _bundleModulesModule["default"].tableDropdown,
    filters: dropdownFilters,
    label: "Filters (".concat(items.length, "/").concat(totalRowCount, ")"),
    onChange: updateFilters,
    hasActiveFilters: hasActiveFilters
  }))), /*#__PURE__*/_react["default"].createElement(_metricsTable.MetricsTable, {
    className: _bundleModulesModule["default"].table,
    items: items,
    runs: jobs,
    renderRowHeader: renderRowHeader,
    emptyMessage: emptyMessage,
    showHeaderSum: true,
    title: /*#__PURE__*/_react["default"].createElement(_metricsTableTitle.MetricsTableTitle, {
      title: _i18n["default"].MODULES,
      info: "(".concat(items.length, "/").concat(totalRowCount, ")"),
      popoverInfo: _i18n["default"].MODULES_INFO,
      popoverHref: _config["default"].documentation.modules
    })
  }));
};

exports.BundleModules = BundleModules;
BundleModules.defaultProps = {
  className: '',
  items: [],
  jobs: [],
  totalRowCount: 0,
  hasActiveFilters: false,
  customComponentLink: _componentLink.ComponentLink
};
BundleModules.propTypes = {
  /** Adopted child class name */
  className: _propTypes["default"].string,

  /** Rows data */
  items: _propTypes["default"].array,
  // eslint-disable-line react/forbid-prop-types

  /** Jobs data */
  jobs: _propTypes["default"].array,
  // eslint-disable-line react/forbid-prop-types

  /** Chunks data */
  chunks: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    id: _propTypes["default"].string,
    name: _propTypes["default"].string
  })).isRequired,

  /** total row count */
  totalRowCount: _propTypes["default"].number,

  /** Update filters handler */
  updateFilters: _propTypes["default"].func.isRequired,

  /** Reset filters handler */
  resetFilters: _propTypes["default"].func.isRequired,
  resetAllFilters: _propTypes["default"].func.isRequired,

  /** Filters data */
  filters: _propTypes["default"].shape({
    changed: _propTypes["default"].bool
  }).isRequired,
  hasActiveFilters: _propTypes["default"].bool,
  sortItems: _propTypes["default"].shape(_defineProperty({}, _propTypes["default"].string, _propTypes["default"].shape({
    label: _propTypes["default"].string,
    defaultDirection: _propTypes["default"].bool
  }))).isRequired,
  sort: _propTypes["default"].shape({
    sortBy: _propTypes["default"].string,
    direction: _propTypes["default"].string
  }).isRequired,
  updateSort: _propTypes["default"].func.isRequired,
  search: _propTypes["default"].string.isRequired,
  updateSearch: _propTypes["default"].func.isRequired,
  customComponentLink: _propTypes["default"].elementType
};