"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MetricsTableOptions = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _i18n = _interopRequireDefault(require("../../i18n"));

var _dropdown = require("../../ui/dropdown");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var MetricsTableOptions = function MetricsTableOptions(props) {
  var className = props.className,
      handleViewAll = props.handleViewAll,
      handleResetFilters = props.handleResetFilters,
      restProps = _objectWithoutProperties(props, ["className", "handleViewAll", "handleResetFilters"]);

  return /*#__PURE__*/_react["default"].createElement(_dropdown.Dropdown, _extends({
    className: className,
    glyph: "menu"
  }, restProps), function (_ref) {
    var MenuItem = _ref.MenuItem,
        menu = _ref.menu,
        menuItemClassName = _ref.menuItemClassName;

    var getButtonOnClick = function getButtonOnClick(handler) {
      return function () {
        handler();
        menu.toggle();
      };
    };

    return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, handleResetFilters && /*#__PURE__*/_react["default"].createElement(MenuItem, _extends({}, menu, {
      className: menuItemClassName,
      onClick: getButtonOnClick(handleResetFilters)
    }), _i18n["default"].RESET_FILTERS), handleViewAll && /*#__PURE__*/_react["default"].createElement(MenuItem, _extends({}, menu, {
      className: menuItemClassName,
      onClick: getButtonOnClick(handleViewAll)
    }), _i18n["default"].VIEW_ALL));
  });
};

exports.MetricsTableOptions = MetricsTableOptions;
MetricsTableOptions.propTypes = {
  className: _propTypes["default"].string,
  handleViewAll: _propTypes["default"].func,
  handleResetFilters: _propTypes["default"].func
};
MetricsTableOptions.defaultProps = {
  className: '',
  handleViewAll: null,
  handleResetFilters: null
};