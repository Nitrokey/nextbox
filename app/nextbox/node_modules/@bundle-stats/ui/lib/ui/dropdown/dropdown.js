"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Dropdown = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Menu = require("reakit/Menu");

var _flexStack = require("../../layout/flex-stack");

var _icon = require("../icon");

var _dropdownModule = _interopRequireDefault(require("./dropdown.module.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var Dropdown = function Dropdown(props) {
  var className = props.className,
      label = props.label,
      ariaLabel = props.ariaLabel,
      glyph = props.glyph,
      activeLabel = props.activeLabel,
      children = props.children;
  var rootClassName = (0, _classnames["default"])(_dropdownModule["default"].root, activeLabel && _dropdownModule["default"].activeLabel, className);
  var menu = (0, _Menu.useMenuState)({
    baseId: process.env.NODE_ENV === 'test' && 'id-test',
    modal: true
  });
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_Menu.MenuButton, _extends({}, menu, {
    className: rootClassName,
    tabIndex: null
  }), /*#__PURE__*/_react["default"].createElement(_flexStack.FlexStack, {
    space: "xxxsmall",
    className: _dropdownModule["default"].label
  }, glyph && /*#__PURE__*/_react["default"].createElement(_icon.Icon, {
    className: _dropdownModule["default"].labelIcon,
    glyph: glyph
  }), label)), /*#__PURE__*/_react["default"].createElement(_Menu.Menu, _extends({}, menu, {
    "aria-label": ariaLabel || label,
    className: _dropdownModule["default"].dropdown
  }), typeof children === 'function' ? children({
    MenuItem: _Menu.MenuItem,
    menu: menu,
    menuItemClassName: _dropdownModule["default"].menuItem
  }) : children));
};

exports.Dropdown = Dropdown;
Dropdown.defaultProps = {
  className: '',
  label: null,
  ariaLabel: '',
  glyph: null,
  activeLabel: false
};
Dropdown.propTypes = {
  /** Adopted child class name */
  className: _propTypes["default"].string,

  /** Button label */
  label: _propTypes["default"].node,

  /** Aria label */
  ariaLabel: _propTypes["default"].string,

  /** Icon glyph */
  glyph: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** Dropdown open state */
  open: _propTypes["default"].bool.isRequired,

  /** Active label flag */
  activeLabel: _propTypes["default"].bool,

  /** Content */
  children: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].element, _propTypes["default"].func]).isRequired
};