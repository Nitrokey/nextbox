"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _get2 = _interopRequireDefault(require("lodash/get"));

var _react = _interopRequireWildcard(require("react"));

var _react2 = require("@storybook/react");

var _stories = require("../../stories");

var _ = require(".");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var stories = (0, _react2.storiesOf)('UI/Filters', module);
stories.addDecorator((0, _stories.getWrapperDecorator)({
  paddingLeft: '200px'
}));

var FiltersState = function FiltersState(_ref) {
  var children = _ref.children;

  var _useState = (0, _react.useState)({
    changed: true,
    'assetType.entrypoint': true
  }),
      _useState2 = _slicedToArray(_useState, 2),
      values = _useState2[0],
      setValues = _useState2[1];

  var handleSetValues = (0, _react.useCallback)(function (newValues) {
    setValues(_objectSpread(_objectSpread({}, values), newValues));
    console.info(newValues);
  }, [values]);
  return children(values, handleSetValues);
};

stories.add('default', function () {
  return /*#__PURE__*/_react["default"].createElement(FiltersState, null, function (values, setValues) {
    return /*#__PURE__*/_react["default"].createElement(_.Filters, {
      onChange: setValues,
      filters: {
        changed: {
          label: 'Changed',
          defaultValue: (0, _get2["default"])(values, 'changed', true)
        },
        fileTypes: {
          label: 'File types',
          CSS: {
            label: 'CSS',
            defaultValue: (0, _get2["default"])(values, 'fileTypes.CSS', true)
          },
          JS: {
            label: 'JS',
            defaultValue: (0, _get2["default"])(values, 'fileTypes.JS', true)
          },
          HTML: {
            label: 'HTML',
            defaultValue: (0, _get2["default"])(values, 'fileTypes.HTML', true)
          },
          OTHER: {
            label: 'Asset that is not CSS, JS or HTML',
            defaultValue: (0, _get2["default"])(values, 'fileTypes.OTHER', true)
          }
        }
      }
    });
  });
});
stories.add('overflow', function () {
  return /*#__PURE__*/_react["default"].createElement(FiltersState, null, function (values, setValues) {
    return /*#__PURE__*/_react["default"].createElement(_.Filters, {
      onChange: setValues,
      filters: {
        changed: {
          label: 'Changed',
          defaultValue: (0, _get2["default"])(values, 'changed', true)
        },
        chunks: _objectSpread({
          label: 'Chunks'
        }, Array(22).fill('').reduce(function (agg, value, currentIndex) {
          return _objectSpread(_objectSpread({}, agg), {}, _defineProperty({}, "chunk-".concat(currentIndex), {
            label: "Chunk ".concat(currentIndex + 1),
            defaultValue: (0, _get2["default"])(values, "chunks.chunk-".concat(currentIndex))
          }));
        }, {}))
      }
    });
  });
});
stories.add('disable options', function () {
  return /*#__PURE__*/_react["default"].createElement(_.Filters, {
    onChange: function onChange(state) {
      console.log(state); // eslint-disable-line no-console
    },
    filters: {
      changed: {
        label: 'Changed',
        defaultValue: false,
        disabled: true
      },
      entrypoint: {
        label: 'Entrypoint',
        defaultValue: false
      },
      fileTypes: {
        label: 'File types',
        CSS: {
          label: 'CSS',
          defaultValue: true
        },
        JS: {
          label: 'JS',
          defaultValue: true
        },
        HTML: {
          label: 'HTML',
          defaultValue: true
        }
      }
    }
  });
});