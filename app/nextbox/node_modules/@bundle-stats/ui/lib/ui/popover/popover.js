"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Popover = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Popover = require("reakit/Popover");

var _icon = require("../icon");

var _popoverModule = _interopRequireDefault(require("./popover.module.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var Popover = function Popover(_ref) {
  var className = _ref.className,
      icon = _ref.icon,
      label = _ref.label,
      ariaLabel = _ref.ariaLabel,
      children = _ref.children;
  var popover = (0, _Popover.usePopoverState)({
    baseId: process.env.NODE_ENV === 'test' && 'id-test',
    gutter: 24,
    modal: true,
    placement: 'top'
  });
  var onCloseButtonClick = (0, _react.useCallback)(function (event) {
    event.preventDefault();
    popover.toggle();
  }, [popover]);
  var onButtonClick = (0, _react.useCallback)(function (event) {
    event.preventDefault();
    popover.toggle();
  }, [popover]);
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_Popover.PopoverDisclosure, _extends({
    className: (0, _classnames["default"])(_popoverModule["default"].button, className)
  }, popover, {
    onClick: onButtonClick,
    "aria-label": ariaLabel
  }), icon && (typeof icon === 'string' ? /*#__PURE__*/_react["default"].createElement(_icon.Icon, {
    className: _popoverModule["default"].icon,
    glyph: icon
  }) : icon), label && /*#__PURE__*/_react["default"].createElement("span", {
    className: _popoverModule["default"].label
  }, label)), /*#__PURE__*/_react["default"].createElement(_Popover.Popover, _extends({
    className: _popoverModule["default"].popover
  }, popover, {
    tabIndex: 0
  }), /*#__PURE__*/_react["default"].createElement(_Popover.PopoverArrow, _extends({
    className: _popoverModule["default"].arrow
  }, popover)), typeof children === 'function' ? children({
    popoverToggle: popover.toggle
  }) : children, /*#__PURE__*/_react["default"].createElement(_icon.Icon, {
    glyph: "close",
    as: "button",
    type: "button",
    className: _popoverModule["default"].closeBtn,
    onClick: onCloseButtonClick
  })));
};

exports.Popover = Popover;
Popover.propTypes = {
  className: _propTypes["default"].string,
  label: _propTypes["default"].element,
  icon: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].element]),
  children: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].element, _propTypes["default"].func]).isRequired,
  ariaLabel: _propTypes["default"].string
};
Popover.defaultProps = {
  className: '',
  icon: '',
  label: '',
  ariaLabel: 'View more info'
};