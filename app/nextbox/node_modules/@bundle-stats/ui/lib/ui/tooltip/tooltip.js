"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tooltip = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Tooltip = require("reakit/Tooltip");

var _tooltipModule = _interopRequireDefault(require("./tooltip.module.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Tooltip = function Tooltip(props) {
  var className = props.className,
      title = props.title,
      children = props.children,
      Component = props.as,
      ref = props.containerRef,
      restProps = _objectWithoutProperties(props, ["className", "title", "children", "as", "containerRef"]);

  var rootClassName = (0, _classnames["default"])(_tooltipModule["default"].root, className);
  var tooltipProps = (0, _Tooltip.useTooltipState)({
    baseId: process.env.NODE_ENV === 'test' && 'id-test',
    placement: 'top'
  });
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_Tooltip.TooltipReference, _extends({
    as: Component,
    className: rootClassName
  }, ref ? {
    ref: ref
  } : {}, restProps, tooltipProps), children), title && /*#__PURE__*/_react["default"].createElement(_Tooltip.Tooltip, tooltipProps, /*#__PURE__*/_react["default"].createElement(_Tooltip.TooltipArrow, _extends({}, tooltipProps, {
    className: _tooltipModule["default"].arrow
  })), /*#__PURE__*/_react["default"].createElement("div", {
    className: _tooltipModule["default"].tooltip
  }, title)));
};

exports.Tooltip = Tooltip;
Tooltip.defaultProps = {
  className: '',
  title: '',
  as: 'span',
  containerRef: null
};
Tooltip.propTypes = {
  className: _propTypes["default"].string,
  title: _propTypes["default"].node,
  children: _propTypes["default"].node.isRequired,
  as: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].element, _propTypes["default"].func]),
  containerRef: _propTypes["default"].shape({
    current: _propTypes["default"].object // eslint-disable-line react/forbid-prop-types

  })
};