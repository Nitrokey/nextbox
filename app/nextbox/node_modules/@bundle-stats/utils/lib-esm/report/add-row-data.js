import get from 'lodash/get';
import { getGlobalMetricType, getMetricRunInfo } from '../utils/metrics';
import { getMetricChanged } from './get-metric-changed';
export const addRowData = (row, metricType) => {
    const { key, runs } = row;
    const metric = getGlobalMetricType(key, typeof metricType === 'string' && metricType);
    const { biggerIsBetter, label } = metric;
    const processedRuns = runs.map((run, index) => {
        if (!run || typeof run.value === 'undefined' || run.value === null) {
            return null;
        }
        const metricRunInfo = getMetricRunInfo(metric, run.value, (index + 1 < runs.length) ? get(runs, [index + 1, 'value'], 0) : undefined);
        return {
            ...run,
            ...metricRunInfo,
        };
    });
    return {
        ...row,
        biggerIsBetter,
        label,
        changed: getMetricChanged(runs),
        runs: processedRuns,
    };
};
//# sourceMappingURL=add-row-data.js.map