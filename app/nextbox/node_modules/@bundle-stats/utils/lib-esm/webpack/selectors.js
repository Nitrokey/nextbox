import get from 'lodash/get';
import pick from 'lodash/pick';
import { SECTION_WEBPACK_STATS, SECTION_WEBPACK_SIZES, SECTION_WEBPACK_ASSETS, SECTION_WEBPACK_MODULES, SECTION_WEBPACK_PACKAGES, SUMMARY_METRIC_PATHS, SECTION_WEBPACK_ALL_MODULES, } from './constants';
import { metrics as metricTypes } from './metrics';
const getStatsMetrics = (job) => {
    const data = get(job, 'metrics.webpack');
    const metrics = pick(data, SUMMARY_METRIC_PATHS);
    return Object.entries(metrics).reduce((agg, [key, value]) => ({
        ...agg,
        [`webpack.${key}`]: value,
    }), {});
};
const getSizeMetrics = (job) => {
    const metrics = get(job, 'metrics.webpack.sizes', {});
    return Object.keys(metricTypes.sizes).reduce((agg, key) => ({
        ...agg,
        [`webpack.sizes.${key}`]: metrics[key],
    }), {});
};
const getAssetsMetrics = (job) => get(job, 'metrics.webpack.assets', {});
const getModulesMetrics = (job) => get(job, 'metrics.webpack.modules', {});
const getAllModulesMetrics = (job) => get(job, 'metrics.webpack.allModules', {});
const getPackageMetrics = (job) => get(job, 'metrics.webpack.packages', {});
export const selectors = {
    [SECTION_WEBPACK_STATS]: getStatsMetrics,
    [SECTION_WEBPACK_SIZES]: getSizeMetrics,
    [SECTION_WEBPACK_ASSETS]: getAssetsMetrics,
    [SECTION_WEBPACK_MODULES]: getModulesMetrics,
    [SECTION_WEBPACK_ALL_MODULES]: getAllModulesMetrics,
    [SECTION_WEBPACK_PACKAGES]: getPackageMetrics,
};
//# sourceMappingURL=selectors.js.map