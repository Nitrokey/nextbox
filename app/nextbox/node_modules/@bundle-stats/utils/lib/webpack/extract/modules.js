"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.extractModules = void 0;
const get_1 = __importDefault(require("lodash/get"));
const utils_1 = require("../utils");
const getChunkNames = (chunks = [], chunkId) => {
    const chunk = chunks.find(({ id }) => id === chunkId);
    if (!chunk) {
        return [];
    }
    return chunk.names;
};
const extractModules = (webpackStats = {}) => {
    const chunks = get_1.default(webpackStats, 'chunks', []);
    const modules = get_1.default(webpackStats, 'modules', []);
    if (!modules) {
        return { modules: {} };
    }
    const modulesByChunk = modules.reduce((aggregator, moduleEntry) => {
        const { name, size } = moduleEntry;
        const moduleChunks = get_1.default(moduleEntry, 'chunks', []);
        const normalizedName = utils_1.getModuleName(name);
        return moduleChunks.reduce((aggWithChunks, chunkId) => ({
            ...aggWithChunks,
            [chunkId.toString()]: {
                chunkNames: getChunkNames(chunks, chunkId),
                modules: {
                    ...get_1.default(aggWithChunks, [chunkId, 'modules']),
                    [normalizedName]: {
                        name,
                        value: size,
                    },
                },
            },
        }), aggregator);
    }, {});
    return {
        metrics: {
            modules: modulesByChunk,
        },
    };
};
exports.extractModules = extractModules;
//# sourceMappingURL=modules.js.map