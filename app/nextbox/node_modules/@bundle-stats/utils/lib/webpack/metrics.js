"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.metrics = void 0;
const metrics_1 = require("../config/metrics");
exports.metrics = {
    totalSizeByTypeALL: {
        label: 'Bundle Size',
        description: 'Sum of all assets emitted by webpack.',
        url: 'https://relative-ci.com/documentation/metrics-and-data#assets',
        type: metrics_1.METRIC_TYPE_FILE_SIZE,
    },
    totalInitialSizeJS: {
        label: 'Initial JS',
        description: 'Sum of all JavaScript assets that are labeled as initial(eg: vendor.js, app.js).',
        url: 'https://relative-ci.com/documentation/metrics-and-data#assets',
        type: metrics_1.METRIC_TYPE_FILE_SIZE,
    },
    totalInitialSizeCSS: {
        label: 'Initial CSS',
        description: 'Sum of all CSS assets that are labeled as initial(eg: vendor.css, app.css).',
        url: 'https://relative-ci.com/documentation/metrics-and-data#assets',
        type: metrics_1.METRIC_TYPE_FILE_SIZE,
    },
    cacheInvalidation: {
        label: 'Cache Invalidation',
        description: 'Ratio between the total changed assets and Bundle Size.',
        url: 'https://relative-ci.com/documentation/metrics-and-data#assets',
        type: metrics_1.METRIC_TYPE_PERCENTAGE,
        biggerIsBetter: false,
    },
    chunkCount: {
        label: 'Chunks',
        description: 'Total number of chunks generated by webpack.',
        url: 'https://relative-ci.com/documentation/metrics-and-data#assets',
        type: metrics_1.METRIC_TYPE_NUMERIC,
        biggerIsBetter: false,
    },
    assetCount: {
        label: 'Assets',
        description: 'Total number of assets emitted by webpack.',
        url: 'https://relative-ci.com/documentation/metrics-and-data#assets',
        type: metrics_1.METRIC_TYPE_NUMERIC,
        biggerIsBetter: false,
    },
    moduleCount: {
        label: 'Modules',
        description: 'Total number of modules bundled by webpack.',
        url: 'https://relative-ci.com/documentation/metrics-and-data#modules-1',
        type: metrics_1.METRIC_TYPE_NUMERIC,
        biggerIsBetter: false,
    },
    packageCount: {
        label: 'Packages',
        description: 'Total number of packages bundled by webpack.',
        url: 'https://relative-ci.com/documentation/metrics-and-data#packages',
        type: metrics_1.METRIC_TYPE_NUMERIC,
        biggerIsBetter: false,
    },
    duplicatePackagesCount: {
        label: 'Duplicate Packages',
        description: 'Total number of packages that are duplicated.',
        url: 'https://relative-ci.com/documentation/metrics-and-data#packages',
        type: metrics_1.METRIC_TYPE_NUMERIC,
        biggerIsBetter: false,
    },
    sizes: {
        totalSizeByTypeJS: {
            label: 'JS',
            type: metrics_1.METRIC_TYPE_FILE_SIZE,
        },
        totalSizeByTypeCSS: {
            label: 'CSS',
            type: metrics_1.METRIC_TYPE_FILE_SIZE,
        },
        totalSizeByTypeIMG: {
            label: 'IMG',
            type: metrics_1.METRIC_TYPE_FILE_SIZE,
        },
        totalSizeByTypeMEDIA: {
            label: 'Media',
            type: metrics_1.METRIC_TYPE_FILE_SIZE,
        },
        totalSizeByTypeFONT: {
            label: 'Fonts',
            type: metrics_1.METRIC_TYPE_FILE_SIZE,
        },
        totalSizeByTypeHTML: {
            label: 'HTML',
            type: metrics_1.METRIC_TYPE_FILE_SIZE,
        },
        totalSizeByTypeOTHER: {
            label: 'Other',
            type: metrics_1.METRIC_TYPE_FILE_SIZE,
        },
    },
};
//# sourceMappingURL=metrics.js.map