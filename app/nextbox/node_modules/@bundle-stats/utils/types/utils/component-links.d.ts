export function getAssetFileTypeFilters(value?: boolean): {};
export function getAssetEntryTypeFilters(value?: boolean): {};
export function getModuleChunkFilters(chunkIds: any, value: any): any;
export function getModuleFileTypeFilters(value?: boolean): {};
export namespace TOTALS {
    const section: string;
    const title: string;
}
export namespace BUNDLE_ASSETS_INITIAL_JS {
    const section_1: string;
    export { section_1 as section };
    const title_1: string;
    export { title_1 as title };
    export const params: {
        [x: string]: {
            filters: {};
        };
    };
}
export namespace BUNDLE_ASSETS_INITIAL_CSS {
    const section_2: string;
    export { section_2 as section };
    const title_2: string;
    export { title_2 as title };
    const params_1: {
        [x: string]: {
            filters: {};
        };
    };
    export { params_1 as params };
}
export namespace BUNDLE_ASSETS_CACHE_INVALIDATION {
    const section_3: string;
    export { section_3 as section };
    const title_3: string;
    export { title_3 as title };
    const params_2: {
        [x: string]: {
            filters: {
                [x: string]: boolean;
            };
        };
    };
    export { params_2 as params };
}
export namespace BUNDLE_ASSETS_COUNT {
    const section_4: string;
    export { section_4 as section };
    const title_4: string;
    export { title_4 as title };
    const params_3: {
        [x: string]: {
            filters: {
                [x: string]: boolean;
            };
        };
    };
    export { params_3 as params };
}
export namespace BUNDLE_ASSETS_CHUNK_COUNT {
    const section_5: string;
    export { section_5 as section };
    const title_5: string;
    export { title_5 as title };
    const params_4: {
        [x: string]: {
            filters: {};
        };
    };
    export { params_4 as params };
}
export namespace BUNDLE_MODULES {
    const section_6: string;
    export { section_6 as section };
    const title_6: string;
    export { title_6 as title };
    const params_5: {
        [x: string]: {
            filters: {
                [x: string]: boolean;
            };
        };
    };
    export { params_5 as params };
}
export function getBundleModulesBySearch(search: any): {
    section: string;
    title: string;
    params: {
        [x: string]: {
            search: any;
            filters: {
                [x: string]: boolean;
            };
        };
    };
};
export function getBundleModulesByChunk(chunkIds: any, chunkId: any, fileType?: string): {
    section: string;
    title: string;
    params: {
        [x: string]: {
            filters: any;
        };
    };
};
export namespace BUNLDE_PACKAGES_COUNT {
    const section_7: string;
    export { section_7 as section };
    const title_7: string;
    export { title_7 as title };
    const params_6: {
        [x: string]: {
            filters: {
                [x: string]: boolean;
            };
        };
    };
    export { params_6 as params };
}
export namespace BUNDLE_PACKAGES_DUPLICATE {
    const section_8: string;
    export { section_8 as section };
    const title_8: string;
    export { title_8 as title };
    const params_7: {
        [x: string]: {
            filters: {
                [x: string]: boolean;
            };
        };
    };
    export { params_7 as params };
}
export function getBundleAssetsFileTypeComponentLink(fileType: any, label: any): {
    section: string;
    title: string;
    params: {
        [x: string]: {
            filters: {};
        };
    };
};
export function getBundlePackagesByNameComponentLink(search: any): {
    section: string;
    title: string;
    params: {
        [x: string]: {
            search: any;
            filters: {
                [x: string]: boolean;
            };
        };
    };
};
export function getComponentStateQueryString(params?: {}): string;
export const METRIC_COMPONENT_LINKS: Map<string, {
    link: {
        section: string;
        title: string;
    };
    showDelta?: undefined;
} | {
    link: {
        section: string;
        title: string;
        params: {
            [x: string]: {
                filters: {
                    [x: string]: boolean;
                };
            };
        };
    };
    showDelta: boolean;
}>;
