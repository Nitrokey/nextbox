{"version":3,"sources":["../lib/storagebuilder.ts"],"names":["StorageBuilder","appId","persist","persisted","clear","clearedOnLogout","ScopedStorage","window","localStorage","sessionStorage"],"mappings":";;;;;;;AAEA;;;;;;;;;;;;IAEqBA,c;;;AAMjB,0BAAYC,KAAZ,EAA2B;AAAA;;AAAA;;AAAA,uCAHP,KAGO;;AAAA,6CAFD,KAEC;;AACvB,SAAKA,KAAL,GAAaA,KAAb;AACH;;;;8BAEgD;AAAA,UAAzCC,QAAyC,uEAAtB,IAAsB;;AAC7C,WAAKC,SAAL,GAAiBD,QAAjB;AACA,aAAO,IAAP;AACH;;;oCAEoD;AAAA,UAAvCE,KAAuC,uEAAtB,IAAsB;AACjD,WAAKC,eAAL,GAAuBD,KAAvB;AACA,aAAO,IAAP;AACH;;;4BAEgB;AACb,aAAO,IAAIE,sBAAJ,CACH,KAAKL,KADF,EAEH,KAAKE,SAAL,GAAiBI,MAAM,CAACC,YAAxB,GAAuCD,MAAM,CAACE,cAF3C,EAGH,CAAC,KAAKJ,eAHH,CAAP;AAKH","sourcesContent":["\nimport Storage from './storage'\nimport ScopedStorage from './scopedstorage'\n\nexport default class StorageBuilder {\n\n    private appId: string\n    private persisted = false\n    private clearedOnLogout = false\n\n    constructor(appId: string) {\n        this.appId = appId\n    }\n\n    persist(persist: boolean = true): StorageBuilder {\n        this.persisted = persist\n        return this\n    }\n\n    clearOnLogout(clear: boolean = true): StorageBuilder {\n        this.clearedOnLogout = clear\n        return this\n    }\n\n    build(): Storage {\n        return new ScopedStorage(\n            this.appId,\n            this.persisted ? window.localStorage : window.sessionStorage,\n            !this.clearedOnLogout\n        )\n    }\n\n}\n"],"file":"storagebuilder.js"}