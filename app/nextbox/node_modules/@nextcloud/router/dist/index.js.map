{"version":3,"sources":["../lib/index.ts"],"names":["linkTo","app","file","generateFilePath","linkToRemoteBase","service","getRootUrl","generateRemoteUrl","window","location","protocol","host","generateOcsUrl","version","generateUrl","url","params","options","allOptions","Object","assign","escape","noRewrite","_build","text","vars","replace","a","b","r","encodeURIComponent","toString","charAt","OC","config","modRewriteWorking","imagePath","indexOf","type","isCore","coreApps","link","substring","length","encodeURI","appswebroots","webroot"],"mappings":"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","sourcesContent":["/// <reference types=\"@nextcloud/typings\" />\n\ndeclare var OC: Nextcloud.v16.OC | Nextcloud.v17.OC | Nextcloud.v18.OC | Nextcloud.v19.OC | Nextcloud.v20.OC;\n\n/**\n * Get an absolute url to a file in an app\n *\n * @param {string} app the id of the app the file belongs to\n * @param {string} file the file path relative to the app folder\n * @return {string} Absolute URL to a file\n */\nexport const linkTo = (app: string, file: string) => generateFilePath(app, '', file)\n\n/**\n * Creates a relative url for remote use\n *\n * @param {string} service id\n * @return {string} the url\n */\nconst linkToRemoteBase = (service: string) => getRootUrl() + '/remote.php/' + service\n\n/**\n * @brief Creates an absolute url for remote use\n * @param {string} service id\n * @return {string} the url\n */\nexport const generateRemoteUrl = (service: string) => window.location.protocol + '//' + window.location.host + linkToRemoteBase(service)\n\n/**\n * Get the base path for the given OCS API service\n *\n * @param {string} service name\n * @param {int} version OCS API version\n * @return {string} OCS API base path\n */\nexport const generateOcsUrl = (service: string, version: Number) => {\n    version = (version !== 2) ? 1 : 2\n    return window.location.protocol + '//' + window.location.host + getRootUrl() + '/ocs/v' + version + '.php/' + service + '/'\n}\n\nexport interface UrlOptions {\n    escape: boolean,\n    noRewrite: boolean\n}\n\n/**\n * Generate the absolute url for the given relative url, which can contain parameters\n *\n * Parameters will be URL encoded automatically\n *\n * @return {string} Absolute URL for the given relative URL\n */\nexport const generateUrl = (url: string, params?: object, options?: UrlOptions) => {\n    const allOptions = Object.assign({\n        escape: true,\n        noRewrite: false\n    }, options || {})\n\n    const _build = function (text: string, vars: object) {\n        vars = vars || {};\n        return text.replace(/{([^{}]*)}/g,\n            function (a: string, b: any) {\n                var r = vars[b];\n                if (allOptions.escape) {\n                    return (typeof r === 'string' || typeof r === 'number') ? encodeURIComponent(r.toString()) : encodeURIComponent(a);\n                } else {\n                    return (typeof r === 'string' || typeof r === 'number') ? r.toString() : a;\n                }\n            }\n        );\n    };\n    if (url.charAt(0) !== '/') {\n        url = '/' + url;\n\n    }\n\n    if (OC.config.modRewriteWorking === true && !allOptions.noRewrite) {\n        return getRootUrl() + _build(url, params || {});\n    }\n\n    return getRootUrl() + '/index.php' + _build(url, params || {});\n}\n\n/**\n * Get the absolute path to an image file\n * if no extension is given for the image, it will automatically decide\n * between .png and .svg based on what the browser supports\n *\n * @param {string} app the app id to which the image belongs\n * @param {string} file the name of the image file\n * @return {string}\n */\nexport const imagePath = (app: string, file: string) => {\n    if (file.indexOf('.') === -1) {\n        //if no extension is given, use svg\n        return generateFilePath(app, 'img', file + '.svg')\n    }\n\n    return generateFilePath(app, 'img', file)\n}\n\n/**\n * Get the absolute url for a file in an app\n *\n * @param {string} app the id of the app\n * @param {string} type the type of the file to link to (e.g. css,img,ajax.template)\n * @param {string} file the filename\n * @return {string} Absolute URL for a file in an app\n */\nexport const generateFilePath = (app: string, type: string, file: string) => {\n    const isCore = OC.coreApps.indexOf(app) !== -1\n    let link = getRootUrl()\n    if (file.substring(file.length - 3) === 'php' && !isCore) {\n        link += '/index.php/apps/' + app;\n        if (file !== 'index.php') {\n            link += '/'\n            if (type) {\n                link += encodeURI(type + '/')\n            }\n            link += file\n        }\n    } else if (file.substring(file.length - 3) !== 'php' && !isCore) {\n        link = OC.appswebroots[app];\n        if (type) {\n            link += '/' + type + '/'\n        }\n        if (link.substring(link.length - 1) !== '/') {\n            link += '/'\n        }\n        link += file\n    } else {\n        if ((app === 'settings' || app === 'core' || app === 'search') && type === 'ajax') {\n            link += '/index.php/'\n        } else {\n            link += '/'\n        }\n        if (!isCore) {\n            link += 'apps/'\n        }\n        if (app !== '') {\n            app += '/'\n            link += app\n        }\n        if (type) {\n            link += type + '/'\n        }\n        link += file\n    }\n    return link\n}\n\n/**\n * Return the web root path where this Nextcloud instance\n * is accessible, with a leading slash.\n * For example \"/nextcloud\".\n *\n * @return {string} web root path\n */\nexport const getRootUrl = () => OC.webroot\n"],"file":"index.js"}